// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tenant {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(255)
  domain     String    @db.VarChar(255) @unique
  clientId   String?   @db.VarChar(255)
  logo       String?   @db.VarChar(255)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  user       User?     @relation("TenantUser") // Relation is now optional
}

model User {
  id              Int       @id @default(autoincrement())
  firstName       String    @db.VarChar(255)
  lastName        String    @db.VarChar(255)
  username        String?   @db.VarChar(255) @unique
  email           String    @db.VarChar(255) @unique
  phoneNumber     String?   @db.VarChar(15)
  role            UserRole  @default(CLIENT)
  dateOfBirth     DateTime?
  address1        String?   @db.VarChar(255)
  address2        String?   @db.VarChar(255)
  city            String?   @db.VarChar(255)
  state           String?   @db.VarChar(255)
  zipCode         String?   @db.VarChar(15)
  country         String?   @db.VarChar(255)
  password        String    @db.VarChar(255)
  twoFactorSecret String?   @db.VarChar(255)
  qrCode          String?   @db.Text
  isTwoFactorEnabled Boolean   @default(false)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  tenantId        Int?      @unique // tenantId is now optional
  tenant          Tenant?   @relation("TenantUser", fields: [tenantId], references: [id]) // Relation is optional
}



enum UserRole {
  ADMIN
  CLIENT
}
